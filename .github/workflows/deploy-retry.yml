name: 🔄 Retry Deploy EduGen to Azure

# Este workflow es para usar MANUALMENTE cuando el deployment principal falla
# debido a problemas de Azure SCM o conflictos de timing

on:
  workflow_dispatch:
    inputs:
      wait_time:
        description: 'Tiempo de espera antes del deployment (segundos)'
        required: false
        default: '90'
        type: string

env:
  AZURE_WEBAPP_NAME: edugen-app
  PYTHON_VERSION: '3.11'

jobs:
  retry-deploy:
    runs-on: ubuntu-latest
    
    steps:
    - name: 📦 Checkout code
      uses: actions/checkout@v4
      
    - name: 🐍 Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: ${{ env.PYTHON_VERSION }}
        
    - name: 📋 Install dependencies (Quick mode)
      run: |
        python -m pip install --upgrade pip
        pip install --no-cache-dir -r requirements-azure.txt
        
    - name: 📁 Collect static files
      run: |
        export DJANGO_SETTINGS_MODULE="config.settings.github_actions"
        mkdir -p db
        python manage.py collectstatic --noinput --clear
        
    - name: 🗂️ Prepare deployment
      run: |
        echo "🧹 Cleaning unnecessary files..."
        rm -rf .git .github
        find . -name "*.pyc" -delete
        find . -name "__pycache__" -type d -exec rm -rf {} + 2>/dev/null || true
        chmod +x startup.sh
        echo "✅ Deployment preparation completed"
        
    - name: ⏱️ Extended pre-deployment wait
      run: |
        wait_time="${{ github.event.inputs.wait_time || '90' }}"
        echo "⏱️ Waiting $wait_time seconds to ensure Azure SCM is ready..."
        echo "🔧 This helps avoid SCM container restart conflicts"
        sleep $wait_time
        echo "✅ Extended wait completed, Azure should be ready now"
        
    - name: 🚀 Deploy to Azure Web App (Retry Mode)
      uses: azure/webapps-deploy@v3
      with:
        app-name: ${{ env.AZURE_WEBAPP_NAME }}
        publish-profile: ${{ secrets.AZURE_WEBAPP_PUBLISH_PROFILE }}
        package: .
      timeout-minutes: 15
      
    - name: ⏱️ Post-deployment stabilization
      run: |
        echo "⏱️ Waiting 30 seconds for deployment to stabilize..."
        sleep 30
        echo "✅ Stabilization wait completed"
        
    - name: 🔍 Comprehensive verification
      run: |
        echo "🔍 Performing comprehensive verification..."
        
        # Verificar múltiples endpoints con retry
        endpoints=(
          "https://edugen-app.azurewebsites.net"
          "https://edugen-app.azurewebsites.net/admin/"
        )
        
        for endpoint in "${endpoints[@]}"; do
          echo "🔍 Checking $endpoint"
          max_attempts=3
          attempt=1
          
          while [ $attempt -le $max_attempts ]; do
            if curl -s -f -m 30 "$endpoint" > /dev/null; then
              echo "✅ $endpoint is responding (attempt $attempt)"
              break
            else
              echo "⏱️ $endpoint not ready, attempt $attempt of $max_attempts"
              if [ $attempt -lt $max_attempts ]; then
                sleep 20
              fi
              attempt=$((attempt + 1))
            fi
          done
          
          if [ $attempt -gt $max_attempts ]; then
            echo "⚠️ $endpoint verification failed after $max_attempts attempts"
          fi
        done
        
    - name: 🎯 Retry deployment summary
      run: |
        echo "🎉 Retry deployment process completed!"
        echo "🌐 App URL: https://edugen-app.azurewebsites.net"
        echo "🔧 Admin URL: https://edugen-app.azurewebsites.net/admin/"
        echo "👤 Default admin: admin / EduGenAdmin123!"
        echo ""
        echo "📋 Si el deployment funcionó pero hay problemas:"
        echo "1. Revisar logs en Azure Portal: https://portal.azure.com"
        echo "2. Verificar App Service logs: https://edugen-app.scm.azurewebsites.net/api/logs/docker"
        echo "3. Comprobar variables de entorno en Azure"
        echo "4. Si es necesario, reiniciar App Service desde Azure Portal"
        echo ""
        echo "🔧 Comandos útiles para debugging:"
        echo "- Logs en tiempo real: az webapp log tail --name edugen-app --resource-group [tu-resource-group]"
        echo "- Estado del App Service: az webapp show --name edugen-app --resource-group [tu-resource-group]" 